stages:
  - build
  - publish

.build-template: &build-definition
  stage: build
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay2
    IMAGE_ARCH_PREFIX: ""
  services:
    - docker:dind
  script:
    - . ./scripts/version.sh
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
    - ./scripts/create_docker_image.sh "${CI_REGISTRY_IMAGE}" "${IMAGE_ARCH_PREFIX}${CI_COMMIT_SHA}"
    # push
    - docker push "${CI_REGISTRY_IMAGE}:runtime-dependencies--${IMAGE_ARCH_PREFIX}${CI_COMMIT_SHA}"
    - docker push "${CI_REGISTRY_IMAGE}:runtime-prebuild-dependencies--${IMAGE_ARCH_PREFIX}${CI_COMMIT_SHA}"
    - docker push "${CI_REGISTRY_IMAGE}:runtime-build-dependencies--${IMAGE_ARCH_PREFIX}${CI_COMMIT_SHA}"
    - docker push "${CI_REGISTRY_IMAGE}:runtime-build-test-dependencies--${IMAGE_ARCH_PREFIX}${CI_COMMIT_SHA}"
    # special case for git tag
    - if [ -n "${CI_COMMIT_REF_NAME}" ]; then
        TAG_NAME=$(echo "${CI_COMMIT_REF_NAME}" | tr -c -- '-._\n[:alnum:]' '_') ;
        docker tag "${CI_REGISTRY_IMAGE}:runtime-build-dependencies--${IMAGE_ARCH_PREFIX}${CI_COMMIT_SHA}"
                   "${CI_REGISTRY_IMAGE}:${IMAGE_ARCH_PREFIX}${TAG_NAME}" ;
        docker push "${CI_REGISTRY_IMAGE}:${IMAGE_ARCH_PREFIX}${TAG_NAME}" ;
      fi

build-safe:
  <<: *build-definition
  only:
    - //@tezos/opam-repository
    - //@nomadic-labs/opam-repository
  tags:
    - safe_docker

build-arm64:
  <<: *build-definition
  variables:
    DOCKER_DRIVER: overlay2
    IMAGE_ARCH_PREFIX: "arm64--"
  only:
    - /-release$/@tezos/opam-repository
    - master@tezos/opam-repository
  tags:
    - arm64

merge-manifest:
  stage: publish
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay2
  services:
    - name: "docker:dind"
      command: ["--experimental"]
  before_script:
    # Enable experimental features in Docker client
    - mkdir $HOME/.docker
    - "echo -e '{\n  \"experimental\": \"enabled\"\n}' | tee $HOME/.docker/config.json"
  script:
    - . ./scripts/version.sh
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
    - docker manifest create "${CI_REGISTRY_IMAGE}:runtime-dependencies--${CI_COMMIT_SHA}"
      --amend "${CI_REGISTRY_IMAGE}:runtime-dependencies--${CI_COMMIT_SHA}"
      --amend "${CI_REGISTRY_IMAGE}:runtime-dependencies--arm64--${CI_COMMIT_SHA}"
    - docker manifest push "${CI_REGISTRY_IMAGE}:runtime-dependencies--${CI_COMMIT_SHA}"
    - docker manifest create "${CI_REGISTRY_IMAGE}:runtime-prebuild-dependencies--${CI_COMMIT_SHA}"
      --amend "${CI_REGISTRY_IMAGE}:runtime-prebuild-dependencies--${CI_COMMIT_SHA}"
      --amend "${CI_REGISTRY_IMAGE}:runtime-prebuild-dependencies--arm64--${CI_COMMIT_SHA}"
    - docker manifest push "${CI_REGISTRY_IMAGE}:runtime-prebuild-dependencies--${CI_COMMIT_SHA}"
    - docker manifest create "${CI_REGISTRY_IMAGE}:runtime-build-dependencies--${CI_COMMIT_SHA}"
      --amend "${CI_REGISTRY_IMAGE}:runtime-build-dependencies--${CI_COMMIT_SHA}"
      --amend "${CI_REGISTRY_IMAGE}:runtime-build-dependencies--arm64--${CI_COMMIT_SHA}"
    - docker manifest push "${CI_REGISTRY_IMAGE}:runtime-build-dependencies--${CI_COMMIT_SHA}"
    - docker manifest create "${CI_REGISTRY_IMAGE}:runtime-build-test-dependencies--${CI_COMMIT_SHA}"
      --amend "${CI_REGISTRY_IMAGE}:runtime-build-test-dependencies--${CI_COMMIT_SHA}"
      --amend "${CI_REGISTRY_IMAGE}:runtime-build-test-dependencies--arm64--${CI_COMMIT_SHA}"
    - docker manifest push "${CI_REGISTRY_IMAGE}:runtime-build-test-dependencies--${CI_COMMIT_SHA}"
  only:
    - /-release$/@tezos/opam-repository
    - master@tezos/opam-repository

build:
  <<: *build-definition
  except:
    - //@tezos/opam-repository
    - //@nomadic-labs/opam-repository
